#!/usr/bin/env ruby

$: << File.expand_path('../lib', File.dirname(__FILE__))

require 'drb'
require 'drb/ssl'
require 'rclconf'
require 'yus/session'
require 'yus/helpers'
require 'getoptlong'

opts = []
command = :grant
date = 'until'
GetoptLong.new(
  ['--config', '-c', GetoptLong::REQUIRED_ARGUMENT],
  ['--root_name', '-r', GetoptLong::REQUIRED_ARGUMENT],
  ['--server_url', '-u', GetoptLong::REQUIRED_ARGUMENT],
  ['--yus_dir', '-d', GetoptLong::REQUIRED_ARGUMENT],
  ['--revoke', '-R', GetoptLong::NO_ARGUMENT]
).each { |key, value|
  case key
  when '--revoke'
    command = :revoke
    date = 'from'
  else
    opts.push("#{key}=#{value}")
  end
}

name, action, item, expires = ARGV

unless(action)
	puts <<-EOS
Usage: yus_grant <username> <action> [<item> [<expiry_time>]]
	EOS
  exit
end

time = nil
if expires
  if match = /(\d{1,2})\.(\d{1,2})\.(\d{4})/.match(expires.to_s)
  time = Time.local(match[3].to_i, match[2].to_i, match[1].to_i)
  else
    puts <<-EOS
expiry_date must be in the Format: mm.dd.YYYY
    EOS
  end
end

session = Yus.session(opts)

session.send(command, name, action, item, time)
puts sprintf("%sed permission to %s %s for %s %s %s", 
             command, action, item, name, date, expires)
